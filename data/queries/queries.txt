SELECT * WHERE {?s ?p ?o} LIMIT 1  
SELECT (COUNT(*) as ?sparql1_1) WHERE { SELECT * WHERE { ?s ?p ?o } LIMIT 1 }   
PREFIX void: <http://rdfs.org/ns/void#> CONSTRUCT {  <datasetUri> void:triples ?count } WHERE { SELECT (COUNT(*) AS ?count)  WHERE { ?s ?p ?o } }  
PREFIX void: <http://rdfs.org/ns/void#> CONSTRUCT { <datasetUri> void:classes ?count} WHERE { SELECT (COUNT(DISTINCT ?o) AS ?count) WHERE { ?s a ?o } } 
PREFIX void: <http://rdfs.org/ns/void#> CONSTRUCT { <datasetUri> void:properties ?count} WHERE { SELECT (COUNT(DISTINCT ?p) AS ?count)  WHERE { ?s ?p ?o } }
PREFIX void: <http://rdfs.org/ns/void#> CONSTRUCT { <datasetUri> void:distinctSubjects ?count } WHERE { SELECT (COUNT(DISTINCT ?s ) AS ?count)  WHERE {  ?s ?p ?o   } }
PREFIX void: <http://rdfs.org/ns/void#> CONSTRUCT { <datasetUri> void:distinctObjects ?count } WHERE { SELECT (COUNT(DISTINCT ?o ) AS ?count)  WHERE {  ?s ?p ?o   } }
PREFIX void: <http://rdfs.org/ns/void#> CONSTRUCT { <datasetUri>  void:classPartition [ void:class ?c ] } WHERE { SELECT DISTINCT ?c WHERE { ?s a ?c } }
PREFIX void: <http://rdfs.org/ns/void#> CONSTRUCT { <datasetUri> void:classPartition [ void:class ?c ; void:triples ?count ] } WHERE { SELECT (COUNT(?p) AS ?count) ?c WHERE { ?s a ?c ; ?p ?o . } GROUP BY ?c }
PREFIX void: <http://rdfs.org/ns/void#> CONSTRUCT { <datasetUri> void:classPartition [ void:class ?c ; void:classes ?count ] } WHERE { SELECT (COUNT(DISTINCT ?c2) AS ?count) ?c  WHERE { ?s a ?c ; a ?c2 . } GROUP BY ?c }
PREFIX void: <http://rdfs.org/ns/void#> CONSTRUCT {  <datasetUri> void:classPartition [ void:class ?c ; void:properties ?count ] } WHERE { SELECT (COUNT(DISTINCT ?p) AS ?count) ?c  WHERE { ?s a ?c ; ?p ?o . } GROUP BY ?c }
PREFIX void: <http://rdfs.org/ns/void#> CONSTRUCT {  <datasetUri> void:classPartition [ void:class ?c ; void:distinctSubjects ?count ] } WHERE { SELECT (COUNT(DISTINCT ?s) AS ?count) ?c   WHERE { ?s a ?c . } GROUP BY ?c }
PREFIX void: <http://rdfs.org/ns/void#> CONSTRUCT {  <datasetUri> void:classPartition [ void:class ?c ; void:distinctObjects ?count ] } WHERE { SELECT (COUNT(DISTINCT ?o) AS ?count) ?c   WHERE { ?s a ?c ; ?p ?o } GROUP BY ?c }
PREFIX void: <http://rdfs.org/ns/void#> CONSTRUCT { <datasetUri> void:propertyPartition [ void:property ?p ] } WHERE { SELECT DISTINCT ?p WHERE { ?s ?p ?o } }
PREFIX void: <http://rdfs.org/ns/void#> CONSTRUCT { <datasetUri> void:propertyPartition [ void:property ?p ; void:triples ?count ] } WHERE { SELECT (COUNT(?o) AS ?count) ?p  WHERE { ?s ?p ?o . } GROUP BY ?p }
PREFIX void: <http://rdfs.org/ns/void#> CONSTRUCT { <datasetUri> void:propertyPartition  [ void:property ?p ; void:distinctSubjects ?count ]  } WHERE { SELECT (COUNT(DISTINCT ?s) AS ?count) ?p WHERE { ?s ?p ?o . } GROUP BY ?p }
PREFIX void: <http://rdfs.org/ns/void#> CONSTRUCT { <datasetUri> void:propertyPartition [ void:property ?p ; void:distinctObjects ?count ] } WHERE { SELECT (COUNT(DISTINCT ?o) AS ?count) ?p WHERE { ?s ?p ?o . } GROUP BY ?p }
PREFIX void: <http://rdfs.org/ns/void#> CONSTRUCT { <datasetUri> void:classPartition [  void:class ?c ; void:propertyPartition [ void:property ?p  ] ] } WHERE { SELECT DISTINCT ?p WHERE { ?s a ?c ; ?p ?o .} }
PREFIX void: <http://rdfs.org/ns/void#> CONSTRUCT { <datasetUri> void:classPartition [ void:class ?c ; void:propertyPartition [ void:property ?p ; void:triples ?count ]] . } WHERE { SELECT (COUNT(?o) AS ?count) ?p  WHERE { ?s a ?c ; ?p ?o . } GROUP BY ?c ?p }
PREFIX void: <http://rdfs.org/ns/void#> CONSTRUCT {  <datasetUri> void:classPartition [ void:class ?c ; void:propertyPartition [ void:distinctSubjects ?count ] ] } WHERE { SELECT (COUNT(DISTINCT ?s) AS ?count) ?c ?p   WHERE { ?s a ?c ; ?p ?o . } GROUP BY ?c ?p }
PREFIX void: <http://rdfs.org/ns/void#> CONSTRUCT {  <datasetUri> void:classPartition  [ void:class ?c ; void:propertyPartition [ void:distinctObjects ?count ; void:property ?p ] ]} WHERE { SELECT (COUNT(DISTINCT ?o) AS ?count) ?c ?p WHERE { ?s a ?c ; ?p ?o . } GROUP BY ?c ?p }
PREFIX vext: <http://ldf.fi/void-ext#> CONSTRUCT { <datasetUri> vext:distinctIRIReferenceSubjects ?count } WHERE { SELECT (COUNT(DISTINCT ?s ) AS ?count) WHERE {  ?s ?p ?o  . FILTER(isIri(?s))} }
PREFIX vext: <http://ldf.fi/void-ext#> CONSTRUCT { <datasetUri> vext:distinctBlankNodeSubjects ?count } WHERE { SELECT (COUNT(DISTINCT ?s) AS ?count) WHERE {  ?s ?p ?o  . FILTER(isBlank(?s))} }
PREFIX vext: <http://ldf.fi/void-ext#> CONSTRUCT { <datasetUri> vext:distinctIRIReferenceObjects ?count } WHERE { SELECT (COUNT(DISTINCT ?o ) AS ?count) WHERE {  ?s ?p ?o  . FILTER(isIri(?o))} }
PREFIX vext: <http://ldf.fi/void-ext#> CONSTRUCT { <datasetUri> vext:distinctLiterals ?count } WHERE { SELECT (COUNT(DISTINCT ?o ) AS ?count)  WHERE {  ?s ?p ?o  . FILTER(isLiteral(?o))} }
PREFIX vext: <http://ldf.fi/void-ext#> CONSTRUCT { <datasetUri> vext:distinctBlankNodeObjects ?count } WHERE { SELECT (COUNT(DISTINCT ?o ) AS ?count)  WHERE {  ?s ?p ?o  . FILTER(isBlank(?o))} }
PREFIX vext: <http://ldf.fi/void-ext#> CONSTRUCT { <datasetUri> vext:distinctBlankNodes ?count } WHERE { SELECT (COUNT(DISTINCT ?b ) AS ?count)  WHERE {  { ?s ?p ?b } UNION { ?b ?p ?o } FILTER(isBlank(?b))} }
PREFIX vext: <http://ldf.fi/void-ext#> CONSTRUCT { <datasetUri> vext:distinctIRIReferences ?count } WHERE { SELECT (COUNT(DISTINCT ?u ) AS ?count)  WHERE {  { ?u ?p ?o } UNION { ?s ?u ?o } UNION { ?s ?p ?u } FILTER(isIri(?u))} }
PREFIX vext: <http://ldf.fi/void-ext#> CONSTRUCT { <datasetUri> vext:distinctRDFNodes ?count } WHERE { SELECT (COUNT(DISTINCT ?n ) AS ?count)  WHERE {  { ?n ?p ?o } UNION { ?s ?n ?o } UNION { ?s ?p ?n } } }
PREFIX void: <http://rdfs.org/ns/void#> PREFIX sad: <http://vocab.deri.ie/sad#> CONSTRUCT { <datasetUri> void:propertyPartition [ void:property ?p ; sad:subjectTypes [ sad:subjectClass ?sType ; sad:distinctMembers ?count ]]  .} WHERE { SELECT (COUNT(?s) AS ?count) ?p ?sType WHERE { ?s ?p ?o ; a ?sType . } GROUP BY ?p ?sType}
PREFIX void: <http://rdfs.org/ns/void#> PREFIX sad: <http://vocab.deri.ie/sad#> CONSTRUCT { <datasetUri> void:propertyPartition [ void:property ?p ; sad:objectTypes [ sad:objectClass ?oType ; sad:distinctMembers ?count ]] .} WHERE { SELECT (COUNT(?o) AS ?count) ?p ?oType WHERE { ?s ?p ?o . ?o a ?oType . } GROUP BY ?p ?oType }
          